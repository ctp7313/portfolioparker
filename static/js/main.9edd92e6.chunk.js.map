{"version":3,"sources":["components/Nav/index.js","components/Grid/index.js","components/Jumbotron/index.js","pages/Home.js","pages/Contact.js","pages/Portfolio.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Container","fluid","children","className","Row","Col","size","split","map","join","Jumbotron","main","subline","style","height","clear","paddingTop","textAlign","Home","src","alt","Contact","for","placeholder","rows","target","project","data","image","title","paddingBottom","desc","url","github","Portfolio","App","basename","process","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9edd92e6.chunk.js","sourcesContent":["import React from \"react\";\n\n// Destructuring the type, classNameName, children and onClick props, applying them to the button element\nconst Nav = () => {\n  return (\n    <nav class=\"navbar navbar-expand-sm navbar-dark bg-dark\">        \n      <a class=\"navbar-brand\" href=\"/\">Chris Parker</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarMenu\" aria-controls=\"navbarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarMenu\">\n        <div class=\"navbar-nav ml-auto\">\n          <a class=\"nav-item nav-link\" href=\"/\">Home</a>\n          <a class=\"nav-item nav-link\" href=\"/portfolio\">Portfolio</a>\n          <a class=\"nav-item nav-link\" href=\"/contact\">Contact</a>      \n        </div>\n      </div>\n    </nav>\n  \n  ); \n}\nexport default Nav;\n\n\n  ","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport {Container} from \"../Grid\"\n\nfunction Jumbotron({ main, subline }) {\n  return (\n    <div style={{ \n      height: 150, \n      clear: \"both\", \n      paddingTop: 40, \n      textAlign: \"center\"\n      }} \n      className=\"jumbotron jumbotron-fluid\"\n      >\n      <Container>\n        <h1 className=\"display-8\">\n          {main}\n        </h1>\n        <p className=\"lead\">\n          {subline}\n        </p>\n      </Container>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from 'react';\nimport Jumbotron from '../components/Jumbotron'\nimport { Col, Row, Container } from \"../components/Grid\";\n\nexport default function Home() {\n  return(\n    <div>\n      <Jumbotron main=\"Chris Parker\" subline=\"HTML/CSS | Javascript | MongoDB | Express | React | Node\"/>\n      <Container>\n      <div className=\"d-flex justify-content-center\">\n        <Col size=\"md-4\">\n          <img className=\"img-fluid\" src=\"https://raw.githubusercontent.com/ctp7313/portfolioparker/master/src/assets/main_pic.JPG\" alt=\"Portrait of Chris\"/>\n        </Col>\n        <Col size=\"md-6\">\n            <p>Welcome! I'm a videographer, podcaster, and now recent web development boot camp graduate working for a Seattle-based global logistic provider.\n              My true passions lie in cooking, making craft cocktails at home, and a particular love for modern hobby board gaming.\n            </p>\n            <p>  \n              I see board games as interactive sculptures powerful enough to teach history, critical thinking, empathy, sportsmanship, and more. \n              I also consider them as \"cardboard computers\" with their rule books as technical documentation, and I believe these perspectives have sparked my interests in development. \n              With these new skills, I hope to have an impact on the industry that's affected me so positively and create applications that can bring families and friends closer through gaming.\n            </p>\n        </Col>\n      </div>\n      </Container>\n    </div>\n  )\n}\n\n","import React, { useState } from 'react';\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from '../components/Jumbotron'\n\n\n\nexport default function Contact() {\n  return(\n    <div>\n      <Jumbotron main=\"Contact Me\" subline=\"Let's make something together\"/>\n      <Container>\n        <div className=\"row d-flex justify-content-center\">\n          <Col size=\"md-5\">\n            <form>\n              <div class=\"form-group\">\n                <label for=\"contactName\">Name</label>\n                <input type=\"name\" class=\"form-control\" id=\"contactName\" placeholder=\"First and last name\"/>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"inputEmail\">Email</label>\n                <input type=\"email\" class=\"form-control\" id=\"inputEmail\" placeholder=\"Enter email\"/>\n                <small class=\"form-text text-muted\">I'll never share your email with anyone else.</small>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"messageArea\">Message</label>\n                <textarea class=\"form-control\" id=\"messageArea\" rows=\"3\" placeholder=\"Questions? Have a fun project in mind? Leave your details!\"></textarea>\n              </div>\n              <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n            </form>\n          </Col>\n          <div class=\"card text-white mb-3\">\n            <div className=\"card-body\">\n              <h6>Feel free to reach me at the following:</h6>\n              <ul>\n                <li><a href=\"tel:206-643-0293\">206.643.0293</a></li>\n                <li><a href = \"mailto: ctp7313@gmail.com\">CTP7313@gmail.com</a></li>\n                <li><a href=\"https://www.linkedin.com/in/chrs-prkr/\" target=\"_blank\">LinkedIn</a></li>\n                <li><a href=\"https://github.com/ctp7313\" target=\"_blank\">Github</a></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </Container>\n    </div>\n  )\n}\n\n\n\n","import React from \"react\";\nimport data from '../components/projects/data.json'\nimport {Container, Row} from '../components/Grid'\nimport Jumbotron from \"../components/Jumbotron/index\";\n\nconst project = data.map((data) => {\n  return  (\n        <div className=\"card text-white mb-3 col-4\" key={data.id}>\n                <div className=\"card-body\">\n                  <img  className=\"img-fluid rounded mx-auto d-block\" \n                        src={data.image}\n                        alt={data.title} \n                        style={{paddingBottom: 10}} />\n                  <div className=\"d-flex justify-content-between\">\n                    <h3>{data.title}</h3>\n                  </div>\n                  <p>{data.desc}</p>\n                  <Row className=\"\">\n                    <button className=\"btn btn btn-primary\"><a className=\"text-white\" href={data.url}>Site</a></button>\n                    <button className=\"btn btn btn-primary\"><a className=\"text-white\" href={data.github}>Code</a></button>\n                  </Row>       \n                </div>\n              </div>\n  )\n})\n\nexport default function Portfolio() {\n  return(\n    <div>\n      <Jumbotron main=\"Portfolio\" subline=\"Past & Current Projects\" />\n      <Container>\n        <Row>\n          {project}\n        </Row>\n      </Container> \n    </div>\n  )\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport Home from \"./pages/Home\";\nimport Contact from \"./pages/Contact\";\nimport Portfolio from \"./pages/Portfolio\";\n\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/contact\" component={Contact} />\n          <Route exact path=\"/portfolio\" component={Portfolio} />\n          {/* <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/portfolio\">\n            <Portfolio />\n          </Route>\n          <Route exact path=\"/contact\">\n            <Contact />\n          </Route> */}\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport \"./assets/css/bootstrap.css\"\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}